// import React, { useState } from "react";
// import {
//   StyleSheet,
//   Text,
//   View,
//   FlatList,
//   TouchableOpacity,
//   Modal,
//   TextInput,
//   Image,
//   Alert,
// } from "react-native";
// import * as ImagePicker from "expo-image-picker";
// import { Ionicons } from "@expo/vector-icons";
// import { pickImageToBase64, base64ToImageUri } from '../components/ImageBase64';

// const Sell_supplier = () => {
//   const [products, setProducts] = useState([]);
//   const [selectedId, setSelectedId] = useState(null);
//   const [modalVisible, setModalVisible] = useState(false);
//   const [newName, setNewName] = useState("");
//   const [newPrice, setNewPrice] = useState("");
//   const [newImage, setNewImage] = useState(null);
//   const [editModalVisible, setEditModalVisible] = useState(false);
//   const [editName, setEditName] = useState("");
//   const [editPrice, setEditPrice] = useState("");
//   const [editImage, setEditImage] = useState(null);

//   const pickImage = async (setImageCallback) => {
//     const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();
//     if (status !== "granted") {
//       Alert.alert("Permission denied", "Media library access is required.");
//       return;
//     }

//     const result = await ImagePicker.launchImageLibraryAsync({
//       mediaTypes: "images",
//       allowsEditing: true,
//       quality: 1,
//     });

//     if (!result.canceled) {
//       setImageCallback(result.assets[0].uri);
//     }
//   };

//   // Save Product
//   const handle_SaveProduct = () => {
//     if (!newName || !newPrice) {
//       Alert.alert("Error", "Please fill in both name and price.");
//       return;
//     }

//     const newProduct = {
//       id: Date.now().toString(),
//       name: newName,
//       price: newPrice,
//       image: newImage,
//     };

//     setProducts([...products, newProduct]);
//     setNewName("");
//     setNewPrice("");
//     setNewImage(null);
//     setModalVisible(false);
//   };

//   // Delete Product
//   const handle_DeleteProduct = (id) => {
//     setProducts(products.filter((product) => product.id !== id));
//     setSelectedId(null);
//   };

//   // Update Product
//   const handle_UpdateProduct = () => {
//     if (!editName || !editPrice) {
//       Alert.alert("Error", "Please fill in both name and price.");
//       return;
//     }

//     setProducts((prev) =>
//       prev.map((item) =>
//         item.id === selectedId
//           ? { ...item, name: editName, price: editPrice, image: editImage }
//           : item
//       )
//     );
//     setEditModalVisible(false);
//     setSelectedId(null);
//   };

//   const renderItem = ({ item }) => {
//     const isSelected = selectedId === item.id;
//     return (
//       <TouchableOpacity
//         style={styles.productItem}
//         onPress={() => setSelectedId(isSelected ? null : item.id)}
//       >
//         <View style={styles.iconPlaceholder}>
//           {item.image && (
//             <Image source={{ uri: item.image }} style={styles.productImage} />
//           )}
//         </View>

//         <View style={{ flex: 1 }}>
//           <Text style={styles.productName}>{item.name}</Text>
//           <Text style={styles.productPrice}>â‚± {item.price}</Text>
//         </View>

//         {!isSelected && (
//           <Ionicons
//             name="create"
//             size={22}
//             color="#555"
//             style={{ marginRight: 8 }}
//           />
//         )}

//         {isSelected && (
//           <View style={styles.actionButtons}>
//             <TouchableOpacity
//               style={[styles.actionButton, { backgroundColor: "#007bff" }]}
//               onPress={() => {
//                 setSelectedId(item.id);
//                 setEditName(item.name);
//                 setEditPrice(item.price);
//                 setEditImage(item.image);
//                 setEditModalVisible(true);
//               }}
//             >
//               <Ionicons name="pencil" size={18} color="#fff" />
//             </TouchableOpacity>
//             <TouchableOpacity
//               style={[styles.actionButton, { backgroundColor: "#dc3545" }]}
//               onPress={() => handle_DeleteProduct(item.id)}
//             >
//               <Ionicons name="trash" size={18} color="#fff" />
//             </TouchableOpacity>
//           </View>
//         )}
//       </TouchableOpacity>
//     );
//   };

//   return (
//     <View style={styles.container}>
//       <View style={styles.header}>
//         <Text style={styles.title}>Products</Text>
//         <TouchableOpacity
//           style={styles.addButton}
//           onPress={() => setModalVisible(true)}
//         >
//           <Ionicons name="add" size={28} color="#fff" />
//         </TouchableOpacity>
//       </View>

//       <FlatList
//         data={products}
//         keyExtractor={(item) => item.id}
//         renderItem={renderItem}
//         contentContainerStyle={{ paddingBottom: 20, flexGrow: 1 }}
//         ListEmptyComponent={
//           <View style={styles.emptyContainer}>
//             <Text style={styles.emptyText}>No products yet</Text>
//           </View>
//         }
//       />

//       <Modal visible={modalVisible} animationType="slide" transparent={true}>
//         <View style={styles.modalContainer}>
//           <View style={styles.modalContent}>
//             <Text style={styles.modalTitle}>Add Product</Text>
//             <TouchableOpacity
//               style={styles.imagePicker}
//               onPress={() => pickImage(setNewImage)}
//             >
//               {newImage ? (
//                 <Image source={{ uri: newImage }} style={styles.productImage} />
//               ) : (
//                 <Ionicons name="add-outline" size={50} />
//               )}
//             </TouchableOpacity>
//             <TextInput
//               placeholder="Product Name"
//               style={styles.input}
//               value={newName}
//               onChangeText={setNewName}
//             />
//             <TextInput
//               placeholder="Price"
//               style={styles.input}
//               value={newPrice}
//               onChangeText={setNewPrice}
//               keyboardType="numeric"
//             />
//             <TouchableOpacity
//               style={styles.saveButton}
//               onPress={handle_SaveProduct}
//             >
//               <Text style={styles.saveButtonText}>Save</Text>
//             </TouchableOpacity>
//             <TouchableOpacity onPress={() => setModalVisible(false)}>
//               <Text style={{ color: "red", marginTop: 10 }}>Cancel</Text>
//             </TouchableOpacity>
//           </View>
//         </View>
//       </Modal>

//       <Modal
//         visible={editModalVisible}
//         animationType="slide"
//         transparent={true}
//       >
//         <View style={styles.modalContainer}>
//           <View style={styles.modalContent}>
//             <Text style={styles.modalTitle}>Edit Product</Text>
//             <TouchableOpacity
//               style={styles.imagePicker}
//               onPress={() => pickImage(setEditImage)}
//             >
//               {editImage ? (
//                 <Image
//                   source={{ uri: editImage }}
//                   style={styles.productImage}
//                 />
//               ) : (
//                 <Ionicons name="add-outline" size={50} />
//               )}
//             </TouchableOpacity>
//             <TextInput
//               placeholder="Product Name"
//               style={styles.input}
//               value={editName}
//               onChangeText={setEditName}
//             />
//             <TextInput
//               placeholder="Price"
//               style={styles.input}
//               value={editPrice}
//               onChangeText={setEditPrice}
//               keyboardType="numeric"
//             />
//             <TouchableOpacity
//               style={styles.saveButton}
//               onPress={handle_UpdateProduct}
//             >
//               <Text style={styles.saveButtonText}>Update</Text>
//             </TouchableOpacity>
//             <TouchableOpacity onPress={() => setEditModalVisible(false)}>
//               <Text style={{ color: "red", marginTop: 10 }}>Cancel</Text>
//             </TouchableOpacity>
//           </View>
//         </View>
//       </Modal>
//     </View>
//   );
// };

// export default Sell_supplier;

// const styles = StyleSheet.create({
//   container: { flex: 1, backgroundColor: "#fff" },
//   emptyContainer: {
//     flex: 1,
//     justifyContent: "center",
//     alignItems: "center",
//     paddingTop: 50,
//   },
//   emptyText: {
//     fontSize: 16,
//     color: "#888",
//   },
//   header: {
//     flexDirection: "row",
//     justifyContent: "space-between",
//     alignItems: "center",
//     padding: 15,
//     backgroundColor: "#fff",
//   },
//   title: { fontSize: 20, fontWeight: "bold" },
//   addButton: {
//     backgroundColor: "#331177",
//     borderRadius: 50,
//     padding: 5,
//   },
//   productItem: {
//     flexDirection: "row",
//     alignItems: "center",
//     padding: 12,
//     borderBottomWidth: 1,
//     borderBottomColor: "#eee",
//   },
//   iconPlaceholder: {
//     width: 50,
//     height: 50,
//     backgroundColor: "#ddd",
//     borderRadius: 8,
//     marginRight: 10,
//     overflow: "hidden",
//   },
//   productImage: { width: "100%", height: "100%", resizeMode: "cover" },
//   productName: { fontSize: 16, fontWeight: "bold" },
//   productPrice: { fontSize: 14, color: "#777" },
//   actionButtons: { flexDirection: "row" },
//   actionButton: {
//     padding: 6,
//     borderRadius: 5,
//     marginLeft: 5,
//   },
//   modalContainer: {
//     flex: 1,
//     justifyContent: "center",
//     alignItems: "center",
//     backgroundColor: "rgba(0,0,0,0.5)",
//   },
//   modalContent: {
//     width: "80%",
//     backgroundColor: "#fff",
//     padding: 20,
//     borderRadius: 8,
//     alignItems: "center",
//   },
//   modalTitle: { fontSize: 18, fontWeight: "bold", marginBottom: 10 },
//   input: {
//     width: "100%",
//     borderWidth: 1,
//     borderColor: "#ccc",
//     borderRadius: 5,
//     padding: 10,
//     marginTop: 10,
//   },
//   saveButton: {
//     backgroundColor: "#331177",
//     padding: 10,
//     borderRadius: 5,
//     marginTop: 15,
//     width: "100%",
//     alignItems: "center",
//   },
//   saveButtonText: { color: "#fff", fontWeight: "bold" },
//   imagePicker: {
//     width: 100,
//     height: 100,
//     backgroundColor: "#eee",
//     justifyContent: "center",
//     alignItems: "center",
//     borderRadius: 8,
//     marginTop: 10,
//   },
// });

// import React, { useState } from "react";
// import { StyleSheet, Text, View, FlatList, TouchableOpacity, Modal, TextInput, Alert, Image } from "react-native";
// import Ionicons from "react-native-vector-icons/Ionicons";
// import { pickImageToBase64, base64ToImageUri } from "../components/ImageBase64";

// const Sell_supplier = () => {
//   const [products, setProducts] = useState([]);
//   const [modalVisible, setModalVisible] = useState(false);
//   const [newName, setNewName] = useState("");
//   const [newPrice, setNewPrice] = useState("");
//   const [newImage, setNewImage] = useState(null);

//   const handlePickImage = async () => {
//     const base64 = await pickImageToBase64();
//     if (base64) {
//       setNewImage(base64);
//     }
//   };

//   const handle_SaveProduct = () => {
//     if (!newName || !newPrice) {
//       Alert.alert("Error", "Please fill in both name and price.");
//       return;
//     }

//     const newProduct = {
//       id: Date.now().toString(),
//       name: newName,
//       price: newPrice,
//       image: newImage, // already Base64
//     };

//     console.log("Base64 Output:", newImage);

//     setProducts([...products, newProduct]);
//     setNewName("");
//     setNewPrice("");
//     setNewImage(null);
//     setModalVisible(false);
//   };

//   const handle_DeleteProduct = (id) => {
//     setProducts(products.filter((product) => product.id !== id));
//   };

//   const renderItem = ({ item }) => (
//     <View style={styles.productItem}>
//       {item.image && (
//         <Image source={{ uri: base64ToImageUri(item.image) }} style={styles.productImage} />
//       )}
//       <View style={styles.productInfo}>
//         <Text style={styles.productName}>{item.name}</Text>
//         <Text style={styles.productPrice}>${item.price}</Text>
//       </View>
//       <TouchableOpacity onPress={() => handle_DeleteProduct(item.id)}>
//         <Ionicons name="trash" size={22} color="red" />
//       </TouchableOpacity>
//     </View>
//   );

//   return (
//     <View style={styles.container}>
//       {/* Title and Add Button */}
//       <View style={styles.header}>
//         <Text style={styles.title}>Products</Text>
//         <TouchableOpacity style={styles.addButton} onPress={() => setModalVisible(true)}>
//           <Ionicons name="add" size={24} color="#fff" />
//         </TouchableOpacity>
//       </View>

//       {/* Product List */}
//       {products.length === 0 ? (
//         <Text style={styles.noProducts}>No products yet</Text>
//       ) : (
//         <FlatList
//           data={products}
//           keyExtractor={(item) => item.id}
//           renderItem={renderItem}
//         />
//       )}

//       {/* Add Product Modal */}
//       <Modal visible={modalVisible} animationType="slide">
//         <View style={styles.modalContainer}>
//           <Text style={styles.modalTitle}>Add Product</Text>
//           <TextInput
//             placeholder="Product Name"
//             value={newName}
//             onChangeText={setNewName}
//             style={styles.input}
//           />
//           <TextInput
//             placeholder="Price"
//             value={newPrice}
//             onChangeText={setNewPrice}
//             keyboardType="numeric"
//             style={styles.input}
//           />
//           <TouchableOpacity style={styles.imagePicker} onPress={handlePickImage}>
//             <Text style={styles.imagePickerText}>
//               {newImage ? "Change Image" : "Pick Image"}
//             </Text>
//           </TouchableOpacity>

//           <View style={styles.modalButtons}>
//             <TouchableOpacity style={styles.saveButton} onPress={handle_SaveProduct}>
//               <Text style={styles.buttonText}>Save</Text>
//             </TouchableOpacity>
//             <TouchableOpacity style={styles.cancelButton} onPress={() => setModalVisible(false)}>
//               <Text style={styles.buttonText}>Cancel</Text>
//             </TouchableOpacity>
//           </View>
//         </View>
//       </Modal>
//     </View>
//   );
// };

// export default Sell_supplier;

// const styles = StyleSheet.create({
//   container: { flex: 1, padding: 16 },
//   header: { flexDirection: "row", justifyContent: "space-between", alignItems: "center" },
//   title: { fontSize: 24, fontWeight: "bold" },
//   addButton: { backgroundColor: "#007bff", padding: 10, borderRadius: 8 },
//   noProducts: { marginTop: 20, fontSize: 16, textAlign: "center", color: "#888" },
//   productItem: { flexDirection: "row", alignItems: "center", padding: 10, backgroundColor: "#f9f9f9", borderRadius: 8, marginVertical: 5 },
//   productImage: { width: 50, height: 50, marginRight: 10, borderRadius: 8 },
//   productInfo: { flex: 1 },
//   productName: { fontSize: 16, fontWeight: "bold" },
//   productPrice: { fontSize: 14, color: "#555" },
//   modalContainer: { flex: 1, padding: 20, justifyContent: "center" },
//   modalTitle: { fontSize: 20, fontWeight: "bold", marginBottom: 20 },
//   input: { borderWidth: 1, borderColor: "#ccc", padding: 10, marginBottom: 10, borderRadius: 8 },
//   imagePicker: { backgroundColor: "#f0f0f0", padding: 10, borderRadius: 8, marginBottom: 10, alignItems: "center" },
//   imagePickerText: { fontSize: 16, color: "#555" },
//   modalButtons: { flexDirection: "row", justifyContent: "space-between" },
//   saveButton: { backgroundColor: "green", padding: 10, borderRadius: 8, flex: 1, marginRight: 5, alignItems: "center" },
//   cancelButton: { backgroundColor: "red", padding: 10, borderRadius: 8, flex: 1, marginLeft: 5, alignItems: "center" },
//   buttonText: { color: "#fff", fontWeight: "bold" },
// });
